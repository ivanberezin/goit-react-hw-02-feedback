{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/App.js","index.js"],"names":["Notification","message","className","defaultProps","Statistics","good","neutral","bad","total","percentage","positivePercentage","FeedbackOptions","onLeaveFeedback","type","name","onClick","Section","title","children","App","state","handleIncrement","e","setState","prevState","target","this","Math","round","countTotalFeedbacks","totalFeedbacks","countPositiveFeedbacksPercentage","Component","ReactDOM","render","document","querySelector"],"mappings":"0TAMA,SAASA,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QACnB,OACI,mBAAGC,UAAU,eAAb,SAA6BD,IAItBD,QAEfA,EAAaG,aAAe,CACxBF,QAAS,oBCTb,IAAMG,EAAa,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAC5C,OACI,mCACMD,EAAQ,EACJ,qBAAIN,UAAU,iBAAd,UACE,wCAAWG,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UAEF,cAAC,EAAD,CAAcR,QAAQ,yBAMzBG,IAEfA,EAAWD,aAAe,CACtBE,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPE,mBAAoB,G,UCdTC,EAVS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBACtB,OACI,sBAAKV,UAAU,kBAAf,UACI,wBAAQW,KAAK,SAASC,KAAK,OAAOC,QAASH,EAA3C,kBACA,wBAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,EAA9C,qBACA,wBAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,EAA1C,qB,MCLZ,SAASI,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrB,OACI,0BAAShB,UAAU,UAAnB,UACKe,GAAS,oBAAIf,UAAU,eAAd,SAA8Be,IACvCC,KAKEF,QAEfA,EAAQb,aAAe,CACnBc,MAAO,I,ICiCIE,E,4MA3CXC,MAAQ,CACJf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTc,gBAAkB,SAAAC,GACd,EAAKC,UAAS,SAACC,GACX,OAAO,eACFF,EAAEG,OAAOX,KAAOU,EAAUF,EAAEG,OAAOX,MAAQ,O,oEAKjC,IAAD,EACWY,KAAKN,MAC5BZ,EAFY,EACXH,KADW,EACLC,QADK,EACIC,IAEtB,OAAOC,GAAgB,I,yDAGS,IACzBH,EAAQqB,KAAKN,MAAbf,KAEP,OADgBsB,KAAKC,MAAOvB,EAAKqB,KAAKG,sBAAuB,O,+BAIvD,IAAD,EACwBH,KAAKN,MAA3Bf,EADF,EACEA,KAAMC,EADR,EACQA,QAASC,EADjB,EACiBA,IAChBuB,EAAiBJ,KAAKG,sBACtBnB,EAAqBgB,KAAKK,mCAChC,OACI,qCACI,cAAC,EAAD,CAASd,MAAM,wBAAf,SACI,cAAC,EAAD,CAAiBL,gBAAiBc,KAAKL,oBAE3C,cAAC,EAAD,CAASJ,MAAM,aAAf,SACK,cAAC,EAAD,CAAYZ,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOsB,EAAgBrB,WAAYC,a,GAtC1FsB,aCAlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.083429ee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Notification.css';\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p className=\"notification\">{message}</p>\r\n    )\r\n}\r\n\r\nexport default Notification;\r\n\r\nNotification.defaultProps = {\r\n    message: 'No message value',\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({good, neutral, bad, total, percentage}) => {\r\n    return(\r\n        <>\r\n            { total > 0\r\n                ? <ul className=\"statisticsView\">\r\n                    <li>Good: {good}</li>\r\n                    <li>Neutral: {neutral}</li>\r\n                    <li>Bad: {bad}</li>\r\n                    <li>Total: {total}</li>\r\n                    <li>Positive feedback: {percentage}%</li>\r\n                </ul>\r\n                : <Notification message=\"No feedback given\" />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Statistics;\r\n\r\nStatistics.defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({onLeaveFeedback}) => {\r\n    return (\r\n        <div className=\"feedbackButtons\">\r\n            <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>Good</button>\r\n            <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>Neutral</button>\r\n            <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>Bad</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Section.css';\r\n\r\nfunction Section({title, children}) {\r\n    return (\r\n        <section className=\"section\">\r\n            {title && <h2 className=\"sectionTitle\">{title}</h2>}\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Section;\r\n\r\nSection.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node.isRequired,\r\n}","import React, {Component} from 'react';\r\n\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Section from './Section';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n\r\n    handleIncrement = e => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                [e.target.name]: prevState[e.target.name] + 1,\r\n            }\r\n        })\r\n    }\r\n\r\n    countTotalFeedbacks() {\r\n        const {good, neutral, bad} = this.state;\r\n        const total = good + neutral + bad;\r\n        return total ? total : 0;\r\n    }\r\n\r\n    countPositiveFeedbacksPercentage() {\r\n        const {good} = this.state;\r\n        const percent = Math.round((good/this.countTotalFeedbacks())*100);\r\n        return percent;\r\n    }\r\n\r\n    render() {\r\n        const {good, neutral, bad} = this.state;\r\n        const totalFeedbacks = this.countTotalFeedbacks();\r\n        const positivePercentage = this.countPositiveFeedbacksPercentage();\r\n        return (\r\n            <>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions onLeaveFeedback={this.handleIncrement} />\r\n                </Section>\r\n                <Section title=\"Statistics\">\r\n                    {<Statistics good={good} neutral={neutral} bad={bad} total={totalFeedbacks} percentage={positivePercentage} />}\r\n                </Section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './base.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );"],"sourceRoot":""}